<section class="d-flex flex-column gap-3 w-100 justify-content-between">
  <div class="d-flex gap-3 w-100">
    <MudSelect T="string" Variant="Variant.Filled" @bind-Value="_typeRegister" @bind-Value:after="ToggleDisplayForms" Label="Tipo">
      <MudSelectItem Value="@("input")">Entradas</MudSelectItem>
      <MudSelectItem Value="@("output")">Saídas</MudSelectItem>
    </MudSelect>
    @if (_displayFormByInputs)
    {
        <MudSelect T="string" Variant="Variant.Filled" @bind-Value="_typeOfInput" Label="Tipo de entrada" Clearable="true">
          @foreach (InputsType type in Enum.GetValues(typeof(InputsType)))
          {
            <MudSelectItem Value="@type.ToString()">@type.GetDisplayName()</MudSelectItem>
          }
        </MudSelect>
    }
    else
    {
      <MudSelect T="string" Variant="Variant.Filled" @bind-Value="_typeOfOutput" Label="Tipo de saída" Clearable="true">
        @foreach (OutputsType type in Enum.GetValues(typeof(OutputsType)))
        {
          <MudSelectItem Value="@type.ToString()">@type.GetDisplayName()</MudSelectItem>
        }
      </MudSelect>
    }
  </div>

  @if (_displayFormByInputs)
  {
    <div class="d-flex gap-3 w-100">
      <MudTextField T="string" Variant="Variant.Filled" Label="Talão"/>
      <MudTextField T="string" Variant="Variant.Filled" Label="Data"/>
      <MudTextField T="string" Variant="Variant.Filled" Label="Nome"/>
      <MudTextField T="string" Variant="Variant.Filled" Label="Dízimo"/>
      <MudTextField T="string" Variant="Variant.Filled" Label="Oferta"/>
    </div>
  }
  else
  {
    <MudTextField T="string" Variant="Variant.Filled" Label="Valor"/>
  }
  <MudButton Variant="Variant.Filled" Color="Color.Primary">Registrar</MudButton>
</section>

@code{
  private string _typeRegister = "input";
  private string _typeOfInput = string.Empty;
  private string _typeOfOutput = string.Empty;
  private bool _displayFormByInputs = true;

  private void ToggleDisplayForms() => _displayFormByInputs = !_displayFormByInputs;
}
