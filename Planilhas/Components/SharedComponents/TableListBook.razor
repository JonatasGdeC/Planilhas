@if (_isLoading)
{
  <p>Carregando...</p>
}
else
{
  <MudTable  Items="@ListRegisters" Hover="true" Breakpoint="Breakpoint.Sm" Style="width: 100%">
    <HeaderContent>
      <MudTh>Talão</MudTh>
      <MudTh>Data</MudTh>
      <MudTh>Nome</MudTh>
      <MudTh>Dízimo</MudTh>
      <MudTh>Oferta</MudTh>
      <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
      <MudTd>
        @context.Talao
      </MudTd>
      <MudTd>
        @context.Date
      </MudTd>
      <MudTd>
        @context.Name
      </MudTd>
      <MudTd>
        @context.Dizimo
      </MudTd>
      <MudTd>
        @context.Oferta
      </MudTd>
      <MudTd>
        <MudTooltip Text="Editar">
          <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Primary"/>
        </MudTooltip>
        <MudTooltip Text="Excluir">
          <MudIconButton OnClick="OpenDialogDeleteRegister" Icon="@Icons.Material.Filled.Delete" Color="Color.Error"/>
        </MudTooltip>
      </MudTd>
    </RowTemplate>
  </MudTable>
}

@code {
  private List<RegisterInputs>? ListRegisters = new List<RegisterInputs>();
  private bool _isLoading = true;

  protected override async Task OnParametersSetAsync()
  {
    ListRegisters = await RegisterInputsService.GetAllRegisterInputs();
    _isLoading = false;
  }

  private void OpenDialogDeleteRegister()
  {
    DialogParameters parameters = new DialogParameters();
    DialogOptions options = new DialogOptions { CloseOnEscapeKey = true, FullWidth = true};
    DialogService.Show<DialogDeleteRegister>(title: "", parameters: parameters, options: options);
  }
}

<style>
  .mud-table-root .mud-table-head .mud-table-cell {
    font-weight: bold;
    font-size: 16px;
  }

  .mud-table-root .mud-table-body .mud-table-cell {
    font-size: 16px;
  }
</style>
